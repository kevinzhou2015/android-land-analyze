/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'cipher.so'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../encryptdata.gradle'
android {
    compileSdkVersion rootProject.compileSdkVersion
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "kevin.com.nanal"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode 1
        versionName "0.1.5"
        vectorDrawables.useSupportLibrary true
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions{
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version" // use -ktx for Kotlin
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version" // use -ktx for Kotlin
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid_version" //Rxandroid
    implementation 'io.reactivex.rxjava2:rxjava:2.x.x' //for bug fixes and new features
    implementation "android.arch.work:work-runtime-ktx:$work_version" // use -ktx for Kotlin
    implementation "com.google.code.gson:gson:$gson_Version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    //room
    kapt "android.arch.persistence.room:compiler:$room_version" // use kapt for Kotlin
    implementation "android.arch.persistence.room:runtime:$room_version"
    // LeanCloud 基础包
    implementation ("cn.leancloud.android:avoscloud-sdk:$leancloud_Version")
    // LeanCloud 统计包
    implementation ("cn.leancloud.android:avoscloud-statistics:$leancloud_Version")
    // LeanCloud 用户反馈包
    implementation ("cn.leancloud.android:avoscloud-feedback:$leancloud_Version@aar")
    // avoscloud-sns：LeanCloud 第三方登录包
    implementation ("cn.leancloud.android:avoscloud-sns:$leancloud_Version@aar")
    implementation ("cn.leancloud.android:qq-sdk:$leancloudQQ_Version-leancloud")
    // stetho tool
    implementation "com.facebook.stetho:stetho:$stetho_Version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_Version"
    //uticode
    implementation "com.blankj:utilcode:$uticode_Version"

    testImplementation "junit:junit:4.12"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.2.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.2.0"

}

